AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  pytorch-with-lambda-snapshot

  Sample SAM Template for pytorch-with-lambda-snapshot

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 2048
    Tracing: Active
  Api:
    TracingEnabled: true

Resources:
  # S3 bucket to store PyTorch libraries
  PyTorchLibrariesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "pytorch-libraries-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled

  # Lambda layer for lambda-snaploader
  LambdaSnaploaderLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      LayerName: lambda-snaploader
      Description: Lambda layer containing the lambda-snaploader library
      ContentUri: layer/
      CompatibleRuntimes:
        - python3.12
      RetentionPolicy: Retain

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: A simple PyTorch inference function that loads a pre-trained model and runs a prediction.
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      SnapStart:
        ApplyOn: PublishedVersions
      AutoPublishAlias: live
      Layers:
        - !Ref LambdaSnaploaderLayer
      Environment:
        Variables:
          PYTORCH_BUCKET: !Ref PyTorchLibrariesBucket
          PYTORCH_KEY: pytorch_libs.zip
          AWS_LAMBDA_EXEC_WRAPPER: /opt/bin/bootstrap
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref PyTorchLibrariesBucket
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: post

Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
  PyTorchLibrariesBucketName:
    Description: Name of the S3 bucket storing PyTorch libraries
    Value: !Ref PyTorchLibrariesBucket